# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_core.ipynb (unless otherwise specified).

__all__ = ['is_container', 'maybe_parallel']

# Cell
import pandas as pd
import numpy as np
import os
import re
import random
import matplotlib.pyplot as plt
from multiprocessing import Pool
import time
from functools import partial
import itertools

# Cell
def is_container(x):
    "check if `x` is a container (used for parallel processing)"
    if (type(x) == list) or (type(x) == np.ndarray):
        return True
    else:
        return False

# Cell
def maybe_parallel(func, iterable, cpus=None, **kwargs):

    func = partial(func, **kwargs)

    if is_container(iterable):

        if cpus is None:
            if 'ncpus' in os.environ.keys():
                cpus = int(os.environ['ncpus'])
            else:
                cpus = os.cpu_count()

        processes = min(cpus, len(iterable))

        if processes == 0:
            output = [func(i) for i in iterable]

        else:
            p = Pool(processes=cpus)
            output = p.map(func, iterable)
            p.close()

    else:
        output = func(iterable)

    return output