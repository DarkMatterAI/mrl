# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"is_container": "00_core.ipynb",
         "flatten_recursive": "00_core.ipynb",
         "flatten_list_of_lists": "00_core.ipynb",
         "deduplicate_list": "00_core.ipynb",
         "chunk_list": "00_core.ipynb",
         "filter_passing": "00_core.ipynb",
         "maybe_parallel": "00_core.ipynb",
         "to_mol": "01_chem.ipynb",
         "to_smile": "01_chem.ipynb",
         "to_smart": "01_chem.ipynb",
         "to_mols": "01_chem.ipynb",
         "to_smiles": "01_chem.ipynb",
         "to_smarts": "01_chem.ipynb",
         "canon_smile": "01_chem.ipynb",
         "neutralize_atoms": "01_chem.ipynb",
         "initialize_neutralisation_reactions": "01_chem.ipynb",
         "neutralize_charges": "01_chem.ipynb",
         "draw_mols": "01_chem.ipynb",
         "molwt": "01_chem.ipynb",
         "hbd": "01_chem.ipynb",
         "hba": "01_chem.ipynb",
         "tpsa": "01_chem.ipynb",
         "rotbond": "01_chem.ipynb",
         "fsp3": "01_chem.ipynb",
         "logp": "01_chem.ipynb",
         "rings": "01_chem.ipynb",
         "heteroatoms": "01_chem.ipynb",
         "all_atoms": "01_chem.ipynb",
         "heavy_atoms": "01_chem.ipynb",
         "formal_charge": "01_chem.ipynb",
         "molar_refractivity": "01_chem.ipynb",
         "aromaticrings": "01_chem.ipynb",
         "qed": "01_chem.ipynb",
         "sa_score": "01_chem.ipynb",
         "Catalog": "01_chem.ipynb",
         "SmartsCatalog": "01_chem.ipynb",
         "ParamsCatalog": "01_chem.ipynb",
         "PAINSCatalog": "01_chem.ipynb",
         "PAINSACatalog": "01_chem.ipynb",
         "PAINSBCatalog": "01_chem.ipynb",
         "PAINSCCatalog": "01_chem.ipynb",
         "ZINCCatalog": "01_chem.ipynb",
         "BRENKCatalog": "01_chem.ipynb",
         "morgan_fp": "01_chem.ipynb",
         "ECFP4": "01_chem.ipynb",
         "ECFP6": "01_chem.ipynb",
         "FCFP4": "01_chem.ipynb",
         "FCFP6": "01_chem.ipynb",
         "failsafe_fp": "01_chem.ipynb",
         "fp_to_array": "01_chem.ipynb",
         "tanimoto": "01_chem.ipynb",
         "tanimoto_rd": "01_chem.ipynb",
         "dice": "01_chem.ipynb",
         "dice_rd": "01_chem.ipynb",
         "cosine": "01_chem.ipynb",
         "cosine_rd": "01_chem.ipynb",
         "FP": "01_chem.ipynb",
         "get_fingerprint": "01_chem.ipynb",
         "fingerprint_similarities": "01_chem.ipynb",
         "fragment_mol": "01_chem.ipynb",
         "fragment_smile": "01_chem.ipynb",
         "fragment_smiles": "01_chem.ipynb",
         "fuse_on_atom_mapping": "01_chem.ipynb",
         "fuse_on_link": "01_chem.ipynb",
         "add_map_nums": "01_chem.ipynb",
         "check_ring_bonds": "01_chem.ipynb",
         "decorate_smile": "01_chem.ipynb",
         "decorate_smiles": "01_chem.ipynb",
         "remove_atom": "01_chem.ipynb",
         "generate_spec_template": "01_chem.ipynb",
         "StructureEnumerator": "01_chem.ipynb",
         "add_one_atom": "01_chem.ipynb",
         "add_atom_combi": "01_chem.ipynb",
         "add_bond_combi": "01_chem.ipynb",
         "add_one_bond": "01_chem.ipynb",
         "ScoreFunction": "02_template.filters.ipynb",
         "NoScore": "02_template.filters.ipynb",
         "PassThroughScore": "02_template.filters.ipynb",
         "ModifiedScore": "02_template.filters.ipynb",
         "ConstantScore": "02_template.filters.ipynb",
         "WeightedPropertyScore": "02_template.filters.ipynb",
         "PropertyFunctionScore": "02_template.filters.ipynb",
         "LinearDecayScore": "02_template.filters.ipynb",
         "Filter": "02_template.filters.ipynb",
         "ValidityFilter": "02_template.filters.ipynb",
         "SingleCompoundFilter": "02_template.filters.ipynb",
         "PropertyFilter": "02_template.filters.ipynb",
         "MolWtFilter": "02_template.filters.ipynb",
         "HBDFilter": "02_template.filters.ipynb",
         "HBAFilter": "02_template.filters.ipynb",
         "TPSAFilter": "02_template.filters.ipynb",
         "RotBondFilter": "02_template.filters.ipynb",
         "SP3Filter": "02_template.filters.ipynb",
         "LogPFilter": "02_template.filters.ipynb",
         "RingFilter": "02_template.filters.ipynb",
         "HeteroatomFilter": "02_template.filters.ipynb",
         "AromaticRingFilter": "02_template.filters.ipynb",
         "HeavyAtomsFilter": "02_template.filters.ipynb",
         "MRFilter": "02_template.filters.ipynb",
         "ChargeFilter": "02_template.filters.ipynb",
         "TotalAtomFilter": "02_template.filters.ipynb",
         "QEDFilter": "02_template.filters.ipynb",
         "SAFilter": "02_template.filters.ipynb",
         "StructureFilter": "02_template.filters.ipynb",
         "ExclusionFilter": "02_template.filters.ipynb",
         "FPFilter": "02_template.filters.ipynb",
         "Template": "03_template.template.ipynb",
         "BlankTemplate": "03_template.template.ipynb",
         "ValidMoleculeTemplate": "03_template.template.ipynb",
         "RuleOf5Template": "03_template.template.ipynb",
         "GhoseTemplate": "03_template.template.ipynb",
         "VeberTemplate": "03_template.template.ipynb",
         "REOSTemplate": "03_template.template.ipynb",
         "RuleOf3Template": "03_template.template.ipynb",
         "Block": "04_template.blocks.ipynb",
         "MolBlock": "04_template.blocks.ipynb",
         "ConstantBlock": "04_template.blocks.ipynb",
         "ConstantMolBlock": "04_template.blocks.ipynb",
         "BlockTemplate": "04_template.blocks.ipynb",
         "RGroupBlockTemplate": "04_template.blocks.ipynb",
         "DoubleRGroupBlockTemplate": "04_template.blocks.ipynb",
         "LinkerBlockTemplate": "04_template.blocks.ipynb",
         "ScaffoldBlockTemplate": "04_template.blocks.ipynb",
         "get_device": "05_torch_core.ipynb",
         "to_device": "05_torch_core.ipynb",
         "set_device": "05_torch_core.ipynb",
         "get_model_device": "05_torch_core.ipynb",
         "USE_CUDA": "05_torch_core.ipynb",
         "x_to_preds": "05_torch_core.ipynb",
         "gather_lps": "05_torch_core.ipynb",
         "gumbel_onehot": "05_torch_core.ipynb",
         "average_batches": "05_torch_core.ipynb",
         "smooth_batches": "05_torch_core.ipynb",
         "pad_and_merge": "05_torch_core.ipynb",
         "merge_weights": "05_torch_core.ipynb",
         "merge_models": "05_torch_core.ipynb",
         "freeze": "05_torch_core.ipynb",
         "unfreeze": "05_torch_core.ipynb",
         "discount_rewards": "05_torch_core.ipynb",
         "whiten": "05_torch_core.ipynb",
         "scatter_rewards": "05_torch_core.ipynb",
         "compute_advantages": "05_torch_core.ipynb",
         "CrossEntropy": "05_torch_core.ipynb",
         "HuberLoss": "05_torch_core.ipynb",
         "MSELoss": "05_torch_core.ipynb",
         "pca": "05_torch_core.ipynb",
         "Linear": "06_layers.ipynb",
         "ValueHead": "06_layers.ipynb",
         "Conv": "06_layers.ipynb",
         "Conv1d": "06_layers.ipynb",
         "Conv2d": "06_layers.ipynb",
         "Conv3d": "06_layers.ipynb",
         "PoolingHead": "06_layers.ipynb",
         "SphericalDistribution": "06_layers.ipynb",
         "Prior": "06_layers.ipynb",
         "NormalPrior": "06_layers.ipynb",
         "SphericalPrior": "06_layers.ipynb",
         "Conditional_LSTM": "06_layers.ipynb",
         "LSTM": "06_layers.ipynb",
         "Conditional_LSTM_Block": "06_layers.ipynb",
         "LSTM_Block": "06_layers.ipynb",
         "Encoder": "06_layers.ipynb",
         "LSTM_Encoder": "06_layers.ipynb",
         "MLP_Encoder": "06_layers.ipynb",
         "Conv_Encoder": "06_layers.ipynb",
         "VAE_Transition": "06_layers.ipynb",
         "Norm_Transition": "06_layers.ipynb",
         "PT_Transition": "06_layers.ipynb",
         "Encoder_Decoder": "06_layers.ipynb",
         "SMILES_CHAR_VOCAB": "07_dataloaders.ipynb",
         "SPECIAL_TOKENS": "07_dataloaders.ipynb",
         "MAPPING_TOKENS": "07_dataloaders.ipynb",
         "HALOGEN_REPLACE": "07_dataloaders.ipynb",
         "MAPPING_REPLACE": "07_dataloaders.ipynb",
         "SMILE_REGEX": "07_dataloaders.ipynb",
         "MAPPING_REGEX": "07_dataloaders.ipynb",
         "tokenize_by_character": "07_dataloaders.ipynb",
         "tokenize_with_replacements": "07_dataloaders.ipynb",
         "regex_tokenize": "07_dataloaders.ipynb",
         "Vocab": "07_dataloaders.ipynb",
         "CharacterVocab": "07_dataloaders.ipynb",
         "CharacterReplaceVocab": "07_dataloaders.ipynb",
         "RegexVocab": "07_dataloaders.ipynb",
         "test_reconstruction": "07_dataloaders.ipynb",
         "batch_sequences": "07_dataloaders.ipynb",
         "lm_collate": "07_dataloaders.ipynb",
         "seq_to_seq_collate": "07_dataloaders.ipynb",
         "sequence_prediction_collate": "07_dataloaders.ipynb",
         "vector_collate": "07_dataloaders.ipynb",
         "vector_reconstruction_collate": "07_dataloaders.ipynb",
         "vector_prediction_collate": "07_dataloaders.ipynb",
         "BaseDataset": "07_dataloaders.ipynb",
         "TextDataset": "07_dataloaders.ipynb",
         "TextToTextDataset": "07_dataloaders.ipynb",
         "TextPredictionDataset": "07_dataloaders.ipynb",
         "Vector_Dataset": "07_dataloaders.ipynb",
         "Vec_Recon_Dataset": "07_dataloaders.ipynb",
         "Vec2Text_Dataset": "07_dataloaders.ipynb",
         "Vec_Prediction_Dataset": "07_dataloaders.ipynb",
         "Agent": "08_agent.ipynb",
         "PredictiveAgent": "08_agent.ipynb",
         "BaselineAgent": "08_agent.ipynb",
         "GenerativeAgent": "08_agent.ipynb",
         "CriticAgent": "08_agent.ipynb",
         "ModelOutput": "08_agent.ipynb",
         "LSTM_LM": "09_generative_models.lstm_lm.ipynb",
         "Conditional_LSTM_LM": "09_generative_models.lstm_lm.ipynb",
         "VAE": "10_generative_models.vae.ipynb",
         "LSTM_VAE": "10_generative_models.vae.ipynb",
         "Conv_VAE": "10_generative_models.vae.ipynb",
         "MLP_VAE": "10_generative_models.vae.ipynb",
         "BasePolicy": "11_policy_gradients.ipynb",
         "PolicyGradient": "11_policy_gradients.ipynb",
         "TRPO": "11_policy_gradients.ipynb",
         "PPO": "11_policy_gradients.ipynb",
         "Callback": "12_environment.ipynb",
         "Log": "12_environment.ipynb",
         "Buffer": "12_environment.ipynb",
         "SettrDict": "12_environment.ipynb",
         "BatchState": "12_environment.ipynb",
         "Event": "12_environment.ipynb",
         "Environment": "12_environment.ipynb",
         "Sampler": "12_environment.ipynb",
         "ModelSampler": "12_environment.ipynb",
         "ContrastiveSampler": "12_environment.ipynb",
         "TemplateCallback": "12_environment.ipynb",
         "ContrastiveTemplate": "12_environment.ipynb",
         "AgentCallback": "12_environment.ipynb",
         "GenAgentCallback": "12_environment.ipynb",
         "RewardCallback": "12_environment.ipynb",
         "LossCallback": "12_environment.ipynb",
         "PriorLoss": "12_environment.ipynb",
         "HistoricPriorLoss": "12_environment.ipynb",
         "UpdateBaselineCB": "12_environment.ipynb",
         "StatsCallback": "12_environment.ipynb",
         "Rollback": "12_environment.ipynb",
         "RetrainRollback": "12_environment.ipynb",
         "SupevisedCB": "12_environment.ipynb",
         "LogSampler": "12_environment.ipynb",
         "LogEnumerator": "12_environment.ipynb",
         "DatasetSampler": "12_environment.ipynb",
         "NoveltyBonus": "12_environment.ipynb",
         "log_to_df": "12_environment.ipynb",
         "Reward": "13_reward.ipynb",
         "trajectory_wrapper": "13_reward.ipynb",
         "RewardModule": "13_reward.ipynb",
         "MolReward": "13_reward.ipynb",
         "MLReward": "13_reward.ipynb",
         "FPModelReward": "13_reward.ipynb",
         "SequenceModelReward": "13_reward.ipynb"}

modules = ["core.py",
           "chem.py",
           "templates/filters.py",
           "templates/template.py",
           "templates/blocks.py",
           "torch_core.py",
           "layers.py",
           "dataloaders.py",
           "agent.py",
           "g_models/lstm_lm.py",
           "g_models/vae.py",
           "policy_gradient.py",
           "environment.py",
           "reward.py"]

doc_url = "https://DarkMatterAI.github.io/mrl/"

git_url = "https://github.com/DarkMatterAI/mrl/tree/main/"

def custom_doc_links(name): return None
